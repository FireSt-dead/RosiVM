<Global>
  <GlobalMembers production="(GlobalMembers) ::= (ModuleMember) (GlobalMembers)">
    <Module production="(Module) ::= module (Name) l-brac (ModuleMembers) r-brac">
      <module />
      <Name>geometry</Name>
      <l-brac />
      <ModuleMembers production="(ModuleMembers) ::= (ModuleMember) (ModuleMembers)">
        <Class production="(Class) ::= (Visibility) class (Name) (Extends) (Implements) l-brac (ClassMembers) r-brac">
          <Visibility>public</Visibility>
          <class />
          <Name>Point</Name>
          <l-brac />
          <ClassMembers production="(ClassMembers) ::= (ClassMember) (ClassMembers)">
            <Field production="(Field) ::= (Visibility) var (Name) colon (Type) semicolon">
              <var />
              <Name>x</Name>
              <colon />
              <Type>float32</Type>
              <semicolon />
            </Field>
            <Field production="(Field) ::= (Visibility) var (Name) colon (Type) semicolon">
              <var />
              <Name>y</Name>
              <colon />
              <Type>float32</Type>
              <semicolon />
            </Field>
            <Function production="(Function) ::= (Visibility) method Identifier l-paren (Parameters) r-paren (ReturnType) (StatementBlock)">
              <Visibility>public</Visibility>
              <method />
              <Identifier />
              <l-paren />
              <Parameter production="(Parameter) ::= (Name) colon (Type)">
                <Name>p</Name>
                <colon />
                <Type>Point</Type>
              </Parameter>
              <r-paren />
              <StatementBlock production="(StatementBlock) ::= l-brac (Statements) r-brac">
                <l-brac />
                <Statements production="(Statements) ::= (Statement) (Statements)">
                  <Statement production="(Statement) ::= (Expression) semicolon">
                    <Name>x</Name>
                    <semicolon />
                  </Statement>
                  <Statement production="(Statement) ::= (Expression) semicolon">
                    <PostIncrement production="(PostIncrement) ::= (Prec13Exp) increment">
                      <Name>x</Name>
                      <increment />
                    </PostIncrement>
                    <semicolon />
                  </Statement>
                  <Statement production="(Statement) ::= (Expression) semicolon">
                    <Assign production="(Assign) ::= (Prec12Exp) assign (Expression)">
                      <Name>x</Name>
                      <assign />
                      <ConstantValue>1</ConstantValue>
                    </Assign>
                    <semicolon />
                  </Statement>
                  <Statement production="(Statement) ::= (Expression) semicolon">
                    <Assign production="(Assign) ::= (Prec12Exp) assign (Expression)">
                      <Name>y</Name>
                      <assign />
                      <ConstantValue>12</ConstantValue>
                    </Assign>
                    <semicolon />
                  </Statement>
                  <Statement production="(Statement) ::= (Expression) semicolon">
                    <Assign production="(Assign) ::= (Prec12Exp) assign (Expression)">
                      <Name>z</Name>
                      <assign />
                      <Add production="(Add) ::= (Prec10Exp) plus (Prec11Exp)">
                        <ConstantValue>1</ConstantValue>
                        <plus />
                        <Multiply production="(Multiply) ::= (Prec11Exp) multiply (Prec12Exp)">
                          <ConstantValue>2</ConstantValue>
                          <multiply />
                          <ParenExpression production="(ParenExpression) ::= l-paren (Expression) r-paren">
                            <l-paren />
                            <Add production="(Add) ::= (Prec10Exp) plus (Prec11Exp)">
                              <ConstantValue>3</ConstantValue>
                              <plus />
                              <ConstantValue>4</ConstantValue>
                            </Add>
                            <r-paren />
                          </ParenExpression>
                        </Multiply>
                      </Add>
                    </Assign>
                    <semicolon />
                  </Statement>
                  <Statement production="(Statement) ::= (Expression) semicolon">
                    <Assign production="(Assign) ::= (Prec12Exp) assign (Expression)">
                      <MemberAccess production="(MemberAccess) ::= (Prec13Exp) dot (Member)">
                        <Name>this</Name>
                        <dot />
                        <Member>x</Member>
                      </MemberAccess>
                      <assign />
                      <Add production="(Add) ::= (Prec10Exp) plus (Prec11Exp)">
                        <ConstantValue>12</ConstantValue>
                        <plus />
                        <ConstantValue>15</ConstantValue>
                      </Add>
                    </Assign>
                    <semicolon />
                  </Statement>
                  <Statement production="(Statement) ::= (Expression) semicolon">
                    <Assign production="(Assign) ::= (Prec12Exp) assign (Expression)">
                      <MemberAccess production="(MemberAccess) ::= (Prec13Exp) dot (Member)">
                        <Name>this</Name>
                        <dot />
                        <Member>y</Member>
                      </MemberAccess>
                      <assign />
                      <Multiply production="(Multiply) ::= (Prec11Exp) multiply (Prec12Exp)">
                        <ConstantValue>13</ConstantValue>
                        <multiply />
                        <PostIncrement production="(PostIncrement) ::= (Prec13Exp) increment">
                          <ConstantValue>16</ConstantValue>
                          <increment />
                        </PostIncrement>
                      </Multiply>
                    </Assign>
                    <semicolon />
                  </Statement>
                  <Statement production="(Statement) ::= (Expression) semicolon">
                    <Assign production="(Assign) ::= (Prec12Exp) assign (Expression)">
                      <Name>test</Name>
                      <assign />
                      <Invocation production="(Invocation) ::= (Prec13Exp) l-paren r-paren">
                        <MemberAccess production="(MemberAccess) ::= (Prec13Exp) dot (Member)">
                          <Invocation production="(Invocation) ::= (Prec13Exp) l-paren r-paren">
                            <MemberAccess production="(MemberAccess) ::= (Prec13Exp) dot (Member)">
                              <Name>x</Name>
                              <dot />
                              <Member>y</Member>
                            </MemberAccess>
                            <l-paren />
                            <r-paren />
                          </Invocation>
                          <dot />
                          <Member>z</Member>
                          <dot />
                          <Member>w</Member>
                        </MemberAccess>
                        <l-paren />
                        <r-paren />
                      </Invocation>
                    </Assign>
                    <semicolon />
                  </Statement>
                  <If production="(If) ::= if l-paren (Expression) r-paren (Statement) else (Statement)">
                    <if />
                    <l-paren />
                    <GreaterThan production="(GreaterThan) ::= (Prec8Exp) greater-than (Prec9Exp)">
                      <Name>x</Name>
                      <greater-than />
                      <ConstantValue>15</ConstantValue>
                    </GreaterThan>
                    <r-paren />
                    <Statement production="(Statement) ::= (Expression) semicolon">
                      <Invocation production="(Invocation) ::= (Prec13Exp) l-paren r-paren">
                        <Name>large</Name>
                        <l-paren />
                        <r-paren />
                      </Invocation>
                      <semicolon />
                    </Statement>
                    <else />
                    <Statement production="(Statement) ::= (Expression) semicolon">
                      <Invocation production="(Invocation) ::= (Prec13Exp) l-paren r-paren">
                        <Name>small</Name>
                        <l-paren />
                        <r-paren />
                      </Invocation>
                      <semicolon />
                    </Statement>
                  </If>
                  <If production="(If) ::= if l-paren (Expression) r-paren (Statement) else (Statement)">
                    <if />
                    <l-paren />
                    <Name>testVal</Name>
                    <r-paren />
                    <if />
                    <l-paren />
                    <Not production="(Not) ::= not (Prec12Exp)">
                      <not />
                      <Name>y</Name>
                    </Not>
                    <r-paren />
                    <Statement production="(Statement) ::= (Expression) semicolon">
                      <Invocation production="(Invocation) ::= (Prec13Exp) l-paren r-paren">
                        <Name>large</Name>
                        <l-paren />
                        <r-paren />
                      </Invocation>
                      <semicolon />
                    </Statement>
                    <else />
                    <Statement production="(Statement) ::= (Expression) semicolon">
                      <Invocation production="(Invocation) ::= (Prec13Exp) l-paren r-paren">
                        <Name>small</Name>
                        <l-paren />
                        <r-paren />
                      </Invocation>
                      <semicolon />
                    </Statement>
                    <else />
                    <Statement production="(Statement) ::= (Expression) semicolon">
                      <Invocation production="(Invocation) ::= (Prec13Exp) l-paren r-paren">
                        <Name>verySmall</Name>
                        <l-paren />
                        <r-paren />
                      </Invocation>
                      <semicolon />
                    </Statement>
                  </If>
                  <If production="(If) ::= if l-paren (Expression) r-paren (Statement) else (Statement)">
                    <if />
                    <l-paren />
                    <Not production="(Not) ::= not (Prec12Exp)">
                      <not />
                      <Name>x</Name>
                    </Not>
                    <r-paren />
                    <StatementBlock production="(StatementBlock) ::= l-brac (Statements) r-brac">
                      <l-brac />
                      <If production="(If) ::= if l-paren (Expression) r-paren (Statement) else (Statement)">
                        <if />
                        <l-paren />
                        <Not production="(Not) ::= not (Prec12Exp)">
                          <not />
                          <Name>y</Name>
                        </Not>
                        <r-paren />
                        <StatementBlock production="(StatementBlock) ::= l-brac (Statements) r-brac">
                          <l-brac />
                          <Statement production="(Statement) ::= (Expression) semicolon">
                            <Invocation production="(Invocation) ::= (Prec13Exp) l-paren r-paren">
                              <Name>large</Name>
                              <l-paren />
                              <r-paren />
                            </Invocation>
                            <semicolon />
                          </Statement>
                          <r-brac />
                        </StatementBlock>
                        <else />
                        <StatementBlock production="(StatementBlock) ::= l-brac (Statements) r-brac">
                          <l-brac />
                          <Statement production="(Statement) ::= (Expression) semicolon">
                            <Invocation production="(Invocation) ::= (Prec13Exp) l-paren r-paren">
                              <Name>small</Name>
                              <l-paren />
                              <r-paren />
                            </Invocation>
                            <semicolon />
                          </Statement>
                          <r-brac />
                        </StatementBlock>
                      </If>
                      <r-brac />
                    </StatementBlock>
                    <else />
                    <StatementBlock production="(StatementBlock) ::= l-brac (Statements) r-brac">
                      <l-brac />
                      <Statement production="(Statement) ::= (Expression) semicolon">
                        <Invocation production="(Invocation) ::= (Prec13Exp) l-paren r-paren">
                          <Name>verySmall</Name>
                          <l-paren />
                          <r-paren />
                        </Invocation>
                        <semicolon />
                      </Statement>
                      <r-brac />
                    </StatementBlock>
                  </If>
                </Statements>
                <r-brac />
              </StatementBlock>
            </Function>
          </ClassMembers>
          <r-brac />
        </Class>
        <Class production="(Class) ::= (Visibility) class (Name) (Extends) (Implements) l-brac (ClassMembers) r-brac">
          <Visibility>public</Visibility>
          <class />
          <Name>Point3d</Name>
          <l-brac />
          <ClassMembers production="(ClassMembers) ::= (ClassMember) (ClassMembers)">
            <Field production="(Field) ::= (Visibility) var (Name) colon (Type) semicolon">
              <var />
              <Name>z</Name>
              <colon />
              <Type>float32</Type>
              <semicolon />
            </Field>
          </ClassMembers>
          <r-brac />
        </Class>
      </ModuleMembers>
      <r-brac />
    </Module>
  </GlobalMembers>
</Global>